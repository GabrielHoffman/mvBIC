% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evalCriterion.R
\name{nparam}
\alias{nparam}
\title{Number of parameters in model}
\usage{
nparam(object, countLevels = TRUE)
}
\arguments{
\item{object}{model fit by \code{lm()} or \code{lmer()}}

\item{countLevels}{default TRUE, count number of levels rather than number of variance compinents.  See description}
}
\value{
number of parameters
}
\description{
In the case of \code{lm()}, the result is the nubmer of coefficients + 1 for the variance term.  In the case of \code{lmer()}, there are two options.  For \code{countLevels = TRUE}, returns the number of fixed effects + number of levels in random effects + 1 for residual variance term.  This treats each level of a random effect as a parameter. For \code{countLevels = FALSE}, returns number of fixed effects + number of variance components.  Here a random effect with 10 levels is only counted as 1 parameter.  This tends to underpenalize.
}
\details{
Number of parameters in model from \code{lm()} or \code{lmer()}
}
